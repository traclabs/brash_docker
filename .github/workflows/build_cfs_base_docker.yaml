name: Create cfs_base_docker image

on:
  workflow_dispatch:
   # Push
  pull_request:
    branches:
      - devel
      
env: 
  # Use docker.io for DockerHub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
        
      
jobs:

  build_brash_noetic:
  
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write      
    steps:
      # Checkout this repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up docker buildx (latest build magic)       
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker registry
      - name: Log into registry ${{env.REGISTRY}}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
        
      
      # Extract metadata for docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}   
      
      # This repository is checked out! It needs to pull recursively
      - name: Clone brash_docker and submodules (cFS, brash and juicer)
        run: |
          echo "Print current location 1"
          pwd
          git submodule update --init --recursive                    
          
      # Clone brash workspace repositories
      - name: Clone brash workspace repositories
        run: |
          echo "Print current location 2"
          pwd
          echo "Print ls"
          ls
          cd brash
          pip3 install vcstool
          mkdir src
          vcs import src < https.repos
          
      # Source setup_dev and call docker-compose build
      - name: Source setup_dev and call docker-compose build
        run: |
          echo "Print current location 3 = is it in brash?"
          pwd
          shopt -s expand_aliases        
          source setup_dev.sh
          
          docker-compose build
          
      # Build cfs_base (call build_cfe)
      - name: Build cfs_base
        run: |
          shopt -s expand_aliases
          source setup_dev.sh
          
          build_cfe prep SIMULATION=native
          build_cfe install          
      
      # Push cfs_base image, after tagging it correctly
      # (not using build-and-push action as passing images is giving me trouble)
      - name: Push cfs_base
        run: |
          echo "testing: "
          echo "${{env.REGISTRY}}"
          echo "testing 2"
          echo "${{env.IMAGE_NAME}}"
          echo "Setting remote tag"
          remote_tag="ghcr.io/traclabs/brash_docker:cfe-base"
          echo "Docker tag"
          docker tag cfs-base $remote_tag
          echo "Docker push"
          docker push $remote_tag
      
