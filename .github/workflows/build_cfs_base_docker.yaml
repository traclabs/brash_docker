name: Create cfs_base_docker image

on:
  workflow_dispatch:
   # Push
  pull_request:
    branches:
      - devel
      
env: 
  # Use docker.io for DockerHub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
        
      
jobs:

  build_brash_noetic:
  
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write      
    steps:
      # Checkout this repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up docker buildx (latest build magic)       
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker registry
      - name: Log into registry ${{env.REGISTRY}}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
        
      
      # Extract metadata for docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}   
      
      # Clone this repository
      - name: Clone brash_docker and submodules (cFS, brash and juicer)
        run: |
          git clone --recursive http://github.com/traclabs/brash_docker.git brash_docker                    
          
      # Clone brash workspace repositories
      - name: Clone brash workspace repositories
        run: |
          cd brash_docker/brash
          pip3 install vcstool
          mkdir src
          vcs import src < https.repos

      # Source setup_dev and call docker-compose build
      - name: Source setup_dev and call docker-compose build
        run: |
          cd brash_docker
          
          shopt -s expand_aliases        
          source setup_dev.sh
          
          docker-compose build
          
      # Build cfs_base (call build_cfe)
      - name: Build cfs_base
        run: |
          cd brash_docker
          
          shopt -s expand_aliases
          source setup_dev.sh
          
          build_cfe prep SIMULATION=native
          build_cfe install          
      
      # Create a dummy dockerfile for build-and-push
      # this dummy will use as base cfs-base / brash-ros-base
      - name: Create temp cfs-base dockerfile
        run: |
          cd brash_docker
          touch cfs_base_temp.Dockerfile
          echo "FROM cfs-base" > cfs_base_temp.Dockerfile
          
      # Build the cfs-base docker image  and push it with buildx
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          #build-args: SRC_DIR=src
          context: brash_docker
          file: ./cfs_base_temp.Dockerfile
          push: ${{github.event_name != 'pull_request' }}
          tags: cfs-base #${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          no-cache: true
  
